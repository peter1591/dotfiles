set nocompatible
filetype plugin indent on
syntax on

call plug#begin('~/.vim/plugged')

" Sensible Default!
Plug 'tpope/vim-sensible'

Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-dispatch'

Plug 'SirVer/ultisnips'
Plug 'SirVer/ultisnips'

" Buffers {{{
Plug 'vim-airline/vim-airline'
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1

Plug 'ton/vim-bufsurf'

Plug 'vim-scripts/restore_view.vim'

Plug 'Raimondi/delimitMate'

Plug 'Valloric/YouCompleteMe'

call plug#end()

"--------------------------------------------------------------------
" Vim settings {{{
set background=dark
set clipboard=
set completeopt=longest,menuone
set confirm
set colorcolumn=80
set encoding=utf8
"set expandtab
set fcs=vert:\|
set fileencoding=utf8
set fileencodings=utf8,iso-8859-1,big5,cp950
set foldmethod=manual
set hidden
set hlsearch
set ignorecase
set incsearch
set lazyredraw
set list
set listchars=tab:»·,trail:·
set mouse=a
set nowrap
set ruler
set scrolloff=5
set sessionoptions-=curdir
set noshiftround
set shiftwidth=2
set showcmd
set smartcase
set smartindent
set softtabstop=2
set synmaxcol=200
set t_Co=256
set tabstop=2
set title
set titleold=
set ttimeoutlen=50
set viewoptions=cursor,folds,slash,unix
set virtualedit=block
set visualbell t_vb=
set wildmenu
set wildignore=*.o,*.so,*.swp,*~,*.pyc

set number
set relativenumber
highlight LineNr ctermfg=grey
nnoremap <C-N> :set number!<CR>:set relativenumber!<CR>

" TODO(Darkpi): See if there's better colorscheme available?
colorscheme torte
" }}}

" Custom keybinding {{{
" Trying space as leader key, need to be careful not conflict with fzf
" bindings.
let mapleader="\<Space>"
let maplocalleader="\<Space>"

" Close buffer without affecting window layout
nnoremap <Leader>q :bp\|bd #<CR>

" Quick load/save
nnoremap <Leader>w :w<CR>
nnoremap <Leader>e :e<CR>

nnoremap <Leader>d :YcmCompleter GoToDeclaration<CR>
nnoremap <Leader>f :YcmCompleter FixIt<CR>

" vim-eunuch {{{
" Mappings {{{
cnoremap w!! SudoWrite
" }}}
" }}}

" BufSurf {{{
" Mappings {{{
nnoremap Z :BufSurfBack<CR>
nnoremap X :BufSurfForward<CR>
" }}}
" }}}

" delimitMate
let g:delimitMate_expand_cr=1

nnoremap q: :q

"Normal mode. Parse the whole cc file.
nnoremap <leader>aif :let g:clang_include_fixer_query_mode=0<cr>:pyf /usr/lib/clang-include-fixer/clang-include-fixer.py<cr>
"Query mode. Parse the part around cursor.
nnoremap <leader>if :let g:clang_include_fixer_query_mode=1<cr>:pyf /usr/lib/clang-include-fixer/clang-include-fixer.py<cr>
